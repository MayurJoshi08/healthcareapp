plugins {
    id "com.android.application"
    id 'com.google.gms.google-services'  // FlutterFire Configuration
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"  // Flutter Gradle Plugin must be applied after Android and Kotlin
}

def localProperties = new Properties()  // Correct initialization of Properties object
def localPropertiesFile = rootProject.file("local.properties")

if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)  // Properly loads the properties file
    }
}

// Example usage: Access properties
def sdkDir = localProperties.getProperty("sdk.dir")
println "SDK directory is: $sdkDir"

def flutterVersionCode = localProperties.getProperty("flutter.versionCode", "1")
def flutterVersionName = localProperties.getProperty("flutter.versionName", "1.0")

android {
    namespace = "com.example.project"
    compileSdkVersion = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion  // Ensure this is defined in local.properties or Flutter settings

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.example.project"  // Ensure this is a unique application ID
        minSdkVersion 23
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()  // Ensure versionCode is an integer
        versionName flutterVersionName  // String is fine here
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug  // Replace with actual release signingConfig for production
        }
    }
}

flutter {
    source = "../.."  // Path to your Flutter module
}
